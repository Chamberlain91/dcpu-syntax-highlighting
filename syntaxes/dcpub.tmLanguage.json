{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "DCPUB",
	"patterns": [
		{
			"match": "#.*$",
			"name": "comment.line.number-sign"
		},
		{
			"include": "#asm"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"match": "//.*$",
					"name": "comment.line"
				},
				{
					"begin": "/\\*",
					"end": "\\*/",
					"name": "comment.block"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "\\b(if|else|while|for|return)\\b"
				},
				{
					"name": "storage.type",
					"match": "\\b(local|static|struct|asm|function)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.new",
					"match": "(&|\\*)(?=\\w+)"
				},
				{
					"match": "(\\w+)(\\.|:)(\\w+)",
					"captures": {
						"2": {
							"name": "keyword.operator.new"
						},
						"3": {
							"name": "storage.type"
						}
					}
				},
				{
					"match": "\\[(.+?)\\]",
					"captures": {
						"0": {
							"name": "keyword.operator"
						},
						"1": {
							"patterns": [
								{
									"include": "$self"
								}
							]
						}
					}
				}
			]
		},
		"asm": {
			"patterns": [
				{
					"begin": "asm",
					"end": "(?:})",
					"beginCaptures": {
						"0": {
							"patterns": [
								{
									"include": "#keywords"
								}
							]
						}
					},
					"patterns": [
						{
							"begin": "\\(",
							"end": "\\)",
							"patterns": [
								{
									"name": "keyword.other",
									"match": "\\b(A|B|C|X|Y|Z|I|J|PC|SP|IA|EX|PUSH|POP)\\b"
								},
								{
									"include": "$self"
								}
							]
						},
						{
							"begin": "{",
							"end": "(?=})",
							"patterns": [
								{
									"include": "#comments"
								},
								{
									"include": "source.dasm"
								}
							]
						}
					]
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\b\\d+\\b"
				},
				{
					"name": "constant.numeric",
					"match": "\\b0x[0-9A-Fa-f]+\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.dcpub",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.dcpub",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.blang"
}